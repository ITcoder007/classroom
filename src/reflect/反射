反射
1、类对象
	所有的类，都存在一个类对象，用于提供类本身的信息eg：有几种构造方法，多少属性，哪些普通方法。
2、获取类对象有3种方式
	1. Class.forName
	2. Hero.class
	3. new Hero().getClass()
3、在一个JVM中，一种类，只会有一个类对象存在。所以以上三种方式取出来的类对象，都是一样的。
	注： 准确的讲是一个ClassLoader下，一种类，只会有一个类对象存在。通常一个JVM下，只会有一个ClassLoader。因为还没有引入ClassLoader概念， 所以暂时不展开了。
4、反射非常强大，但是学习了之后，会不知道该如何使用，反而觉得还不如直接调用方法来的直接和方便。 
	通常来说，需要在学习了Spring 的依赖注入，反转控制之后，才会对反射有更好的理解
	
	当需要从调用第一个业务方法，切换到调用第二个业务方法的时候，不需要修改一行代码，也不需要重新编译，只需要修改配置文件spring.txt，再运行即可。
		这也是Spring框架的最基本的原理，只是它做的更丰富，安全，健壮。
		
		http://how2j.cn/k/reflection/reflection-usage/1111.html#nowhere
5、所以说，spring框架的ioc底层原理就是反射，使用配置文件指定类别之间的关系，指定方法要执行的方法 —— 正是反射能做到的事情。